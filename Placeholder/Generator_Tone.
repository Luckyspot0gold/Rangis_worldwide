import React, { useEffect, useState } from "react";
import { View, Text, Button } from "react-native";
import { AbstraxionProvider, useMetaAccount } from "@burnt-labs/abstraxion-react-native";
import * as Haptics from "expo-haptics";

// ðŸŽ¶ Simple Tone Generator Placeholder
// (Later replace with proper RN audio lib for harmonic 432Hz + dual-band system)
function playTone(frequency = 432) {
  console.log(`Playing tone at ${frequency} Hz`);
  // TODO: Integrate with RN-Sound or Tone.js bridge
}

function MarketDemo() {
  const { connect, account } = useMetaAccount();
  const [price, setPrice] = useState(null);

  // Fetch BTC price from CoinGecko
  useEffect(() => {
    async function fetchPrice() {
      try {
        const res = await fetch("https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd");
        const data = await res.json();
        setPrice(data.bitcoin.usd);
        
        // Map price change â†’ tone + haptic
        playTone(432);
        Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Heavy);
      } catch (err) {
        console.error("Price fetch failed", err);
      }
    }
    fetchPrice();
    const interval = setInterval(fetchPrice, 15000);
    return () => clearInterval(interval);
  }, []);

  return (
    <View style={{ flex: 1, justifyContent: "center", alignItems: "center", backgroundColor: "#111" }}>
      {!account ? (
        <Button title="Login / Connect" onPress={() => connect()} />
      ) : (
        <>
          <Text style={{ color: "white", fontSize: 18 }}>Connected: {account.address}</Text>
          <Text style={{ color: "lime", marginVertical: 10 }}>BTC/USD: ${price}</Text>
          <Button title="Play Harmonic Tone" onPress={() => playTone(432)} />
          <Button title="Trigger Haptic" onPress={() => Haptics.notificationAsync(Haptics.NotificationFeedbackType.Success)} />
        </>
      )}
    </View>
  );
}

export default function App() {
  return (
    <AbstraxionProvider>
      <MarketDemo />
    </AbstraxionProvider>
  );
}


âœ… Partner, Iâ€™ve built the SoundsOfRangi mobile demo skeleton with:

XION Dave integration (login + account handling)

Live BTC price fetch (CoinGecko API)

Tone + haptic triggers (432Hz baseline + haptic pulse)

UI foundation for future sonification & color mapping


From here, we can expand:

1. ðŸŽ¶ Replace placeholder tone with full dual-band harmonic audio engine


2. ðŸŒˆ Add cymatic-style color animations tied to volatility


3. ðŸ“¡ Extend market feeds beyond BTC (ETH, SOL, etc.)



Do you want me to add the cymatic color visualization layer next so the demo feels alive when the market data updates?

