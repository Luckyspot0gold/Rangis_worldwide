// In your ExtensionDelegate or Background Fetch controller
func fetchLatestPulse() {
    let url = URL(string: "https://your-api.execute-api...")!
    let task = URLSession.shared.dataTask(with: url) { data, response, error in
        if let data = data, let pulseData = try? JSONDecoder().decode(PulseData.self, from: data) {
            
            DispatchQueue.main.async {
                // Update complication
                self.updateComplication(value: pulseData.fearGreedValue)
                
                // If extreme value, notify user
                if pulseData.hapticPattern == "warning" || pulseData.hapticPattern == "alert" {
                    self.triggerNotification(with: pulseData)
                }
            }
        }
    }
    task.resume()
}

func triggerNotification(with data: PulseData) {
    let content = UNMutableNotificationContent()
    content.title = "Market Pulse Alert"
    content.body = "Sentiment is \(data.classification) (\(data.fearGreedValue))"
    content.sound = UNNotificationSound.default
    content.categoryIdentifier = "MARKET_ALERT"
    
    // Critical: This is what makes the watch vibrate
    content.interruptionLevel = .timeSensitive 
    
    let request = UNNotificationRequest(identifier: UUID().uuidString, content: content, trigger: nil)
    UNUserNotificationCenter.current().add(request)
}
